package manage.appli.patri.awb.modele;

// Generated 27 avr. 2012 17:38:38 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * AreaAwb generated by hbm2java
 */
@Entity
@Table(name = "AREA_AWB", schema = "INTEGRATEUR")
public class AreaAwb implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 893696543530572906L;
	private String name;
	private DatabaseAwb databaseAwb;
	private String dbname;
	private Set<TableAwb> tableAwbs = new HashSet<TableAwb>(0);

	public AreaAwb() {
	}

	public AreaAwb(String name, DatabaseAwb databaseAwb) {
		this.name = name;
		this.databaseAwb = databaseAwb;
	}

	public AreaAwb(String name, DatabaseAwb databaseAwb, String dbname,
			Set<TableAwb> tableAwbs) {
		this.name = name;
		this.databaseAwb = databaseAwb;
		this.dbname = dbname;
		this.tableAwbs = tableAwbs;
	}

	@Id
	@Column(name = "NAME", unique = true, nullable = false, length = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DATABAS", nullable = false)
	public DatabaseAwb getDatabaseAwb() {
		return this.databaseAwb;
	}

	public void setDatabaseAwb(DatabaseAwb databaseAwb) {
		this.databaseAwb = databaseAwb;
	}

	@Column(name = "DBNAME", length = 50)
	public String getDbname() {
		return this.dbname;
	}

	public void setDbname(String dbname) {
		this.dbname = dbname;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "areaAwb")
	public Set<TableAwb> getTableAwbs() {
		return this.tableAwbs;
	}

	public void setTableAwbs(Set<TableAwb> tableAwbs) {
		this.tableAwbs = tableAwbs;
	}

}
